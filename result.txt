OS:Linux
JVM:Oracle Corporation 1.8.0_121
CPU:null os-arch:null
Cores (incl HT):20
1.8.0_121-b13,Java HotSpot(TM) 64-Bit Server VM,Linux

================================
Test Class: FrequentPrimitives[]
================================
A array[10] of objects with a typical distribution of primitve fields: 2 short Strings, 3 boolean, 6 ints, 2 long, one double.


<pre style='background-color:#ccc;'>lib                                     read (ns)     write (ns)     total (ns)   size (bytes)
FST 2                                        4717           3002           7719            864
</pre>


==============================================
Test Class: FrequentPrimitivesExternalizable[]
==============================================
A class with a typical distribution of primitve fields: 2 short Strings, 3 boolean, 6 ints, 2 long, one double. But implementing Externalizable


<pre style='background-color:#ccc;'>lib                                     read (ns)     write (ns)     total (ns)   size (bytes)
FST 2                                        3445           2245           5690            882
</pre>


===============================
Test Class: FrequentCollections
===============================
Measures serialization of most popular collection classes. (HashMap and an ArrayList filled with Integer and Long).


<pre style='background-color:#ccc;'>lib                                     read (ns)     write (ns)     total (ns)   size (bytes)
FST 2                                       29085          18984          48069           4672
</pre>


================================
Test Class: LargeNativeIntArrays
================================
measures performance serializing a large int array, a large long array and a large double array filled with random values. Note that random values destroy any value compression.


<pre style='background-color:#ccc;'>lib                                     read (ns)     write (ns)     total (ns)   size (bytes)
FST 2                                       41174          26592          67766          31217
</pre>


==================================
Test Class: LargeAndStrangeStrings
==================================
measures serialization of mid size to very large unicode Strings


<pre style='background-color:#ccc;'>lib                                     read (ns)     write (ns)     total (ns)   size (bytes)
FST 2                                       93849          22134         115983          20002
</pre>


======================
Test Class: Primitives
======================
Enums, EnumSets, Date, String, byte, short, int, .. Byte, Character; Short, Integer, .. 


<pre style='background-color:#ccc;'>lib                                     read (ns)     write (ns)     total (ns)   size (bytes)
FST 2                                        3173           1795           4968            302
</pre>


====================
Test Class: Arrays[]
====================
Tests various arrays of int, Dimension, Date, Object. Nested arrays, multidimensional arrays.


<pre style='background-color:#ccc;'>lib                                     read (ns)     write (ns)     total (ns)   size (bytes)
FST 2                                       74238          52105         126343          15112
</pre>

